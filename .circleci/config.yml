version: '2.1'
orbs:
  slack: circleci/slack@4.1
jobs:
  build-frontend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [frontend-build]
        - run:
            name: Build front-end
            command: |
              # Your code here and here dsdesd
              cd frontend
              npm install
              npm run build
              npm audit fix --audit-level=critical --force
              #exit 1
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1

  build-backend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [backend-build]
        - run:
            name: Back-end build
            command: |
              # Your code here
              cd backend
              npm install
              npm run build
              npm audit fix --audit-level=critical --force
              #exit 1
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1

  test-frontend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [frontend-build]
        # Your job code here
        - run:
            name: Frontend unit test
            command: |
              cd frontend
              sudo npm i
              npm run test
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1

  test-backend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [backend-build]
        # Your job code here
        - run:
            name: test backend
            command: |
              cd backend
              npm i
              npm run test
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1


  scan-frontend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [frontend-build]
        # Your job code here
        - run:
            name: scanning frontend
            command: |
              cd frontend
              npm i
              npm audit fix --audit-level=critical --force
              # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
              #npm audit --audit-level=critical
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1

#Adding a space
  scan-backend:
    docker:
      # Docker image here
      - image: circleci/node:13.8.0
    steps:
      # Checkout code from git
      - checkout 
      # Restore from cache
      - restore_cache:
          keys: [backend-build]
      # Your job code here
      - run:
          name: scanning backend
          command: |
            cd backend
            npm i
            npm audit fix --audit-level=critical --force
            # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
            #npm audit --audit-level=critical
      - slack/notify:
          channel: udapeople
          event: fail
          template: basic_fail_1

workflows:
  test-and-deploy:
    jobs:
      - build-frontend:
          context: slack-context
      - build-backend:
          context: slack-context
      - test-frontend:
          requires: [build-frontend]
          context: slack-context
      - test-backend:
          requires: [build-backend]
          context: slack-context
      - scan-backend:
          requires: [build-backend]
          context: slack-context
      - scan-frontend:
          requires: [build-frontend]
          context: slack-context
      #- deploy-infrastructure:
       #   requires: [test-frontend, test-backend, scan-frontend, scan-backend]
        #  filters:
        #    branches:
        #      only: [test-feature-branch]
      #- configure-infrastructure:
       #   requires: [deploy-infrastructure]
      #- run-migrations:
        #  requires: [configure-infrastructure]
      #- deploy-frontend:
        #  requires: [run-migrations]
      #- deploy-backend:
        #  requires: [run-migrations]
      #- smoke-test:
        #  requires: [deploy-backend, deploy-frontend]
      #- cloudfront-update:
         # requires: [smoke-test]
      #- cleanup:
       #   requires: [cloudfront-update]