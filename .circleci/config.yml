version: '2.1'
orbs:
  slack: circleci/slack@4.1

jobs:
  build-frontend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [frontend-build]
        - run:
            name: Build front-end
            command: |
              # Your code here and here dsdesd
              cd frontend
              npm install
              npm run build
              npm audit fix --audit-level=critical --force
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1
        - save_cache:
            key: frontend-build
            paths: [frontend/node_modules]

  build-backend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [backend-build]
        - run:
            name: Back-end build
            command: |
              # Your code here
              cd backend
              npm install
              npm run build
              npm audit fix --audit-level=critical --force
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1       
        - save_cache:
            key: build-backend
            paths: [backend/node_modules ] 
        - run:
            name: Compiled code will be retrieved by deploy-backend.yml 
            command: |
              mkdir /tmp/workspace/
              cp ./backend/package.json /tmp/workspace/
              cd backend/dist
              tar -zcvf /tmp/workspace/backend.tgz ./
              tar -zcvf ./../../backend.tgz ./
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1
        - persist_to_workspace:
            root: /tmp/workspace
            paths:
              - package.json
              - backend.tar.gz 
#########################TESTING-FRONTEND####################################
  test-frontend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [frontend-build]
        # Your job code here
        - run:
            name: Frontend unit test
            command: |
              cd frontend
              sudo npm i
              npm run test
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1

#########################TESTING-BACKEND#####################################
  test-backend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [backend-build]
        # Your job code here
        - run:
            name: test backend
            command: |
              cd backend
              npm i
              npm run test
        - slack/notify:
            channel: udapeople
            event: fail
            template: basic_fail_1

            
workflows:
  test-and-deploy:
    jobs:
      - build-frontend:
          context: slack-context
      - build-backend:
          context: slack-context
      #- test-frontend:
      #    requires: [build-frontend]
      #    context: slack-context
      #- test-backend:
      #    requires: [build-backend]
      #    context: slack-context
      #- scan-backend:
      #    requires: [build-backend]
      #    context: slack-context
      #- scan-frontend:
      #    requires: [build-frontend]
      #    context: slack-context
      #- deploy-infrastructure:
      #    requires: [test-frontend, test-backend, scan-frontend, scan-backend]
      #    context: slack-context
      #- configure-infrastructure:
      #    requires: [deploy-infrastructure]
      #    context: slack-context
      #- run-migrations:
      #    requires: [configure-infrastructure]
      #    context: slack-context
      #- deploy-frontend:
      #    requires: [run-migrations]
      #    context: slack-context
      #- deploy-backend:
      #    requires: [run-migrations]
      #    context: slack-context
      #- smoke-test:
      #    requires: [deploy-backend, deploy-frontend]
      #    context: slack-context
      #- cloudfront-update:
         # requires: [smoke-test]
      #- cleanup:
       #   requires: [cloudfront-update]