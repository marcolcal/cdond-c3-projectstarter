version: '2.1'
orbs:
  slack: circleci/slack@4.1
jobs:
  build-frontend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [frontend-build]
        - run:
            name: Build front-end
            command: |
              # Your code here and here dsdesd
              cd frontend
              npm install
              npm run build
              npm audit fix --audit-level=critical --force
              #exit 1
        - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
        - slack/notify:
            event: pass
            template: success_tagged_deploy_1
        - save_cache:
            paths: [frontend/node_modules]
            key: frontend-build

  build-backend:
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [backend-build]
        - run:
            name: Back-end build
            command: |
              # Your code here
              cd backend
              npm install
              npm run build
              npm audit fix --audit-level=critical --force
              #exit 1
        - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
        - slack/notify:
            event: pass
            template: success_tagged_deploy_1
        - save_cache:
            paths: [backend/node_modules]
            key: backend-build

  test-frontend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [frontend-build]
        # Your job code here
        - run:
            name: Frontend unit test
            command: |
              cd frontend
              sudo npm i
              npm run test
        - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
        - slack/notify:
            event: pass
            template: success_tagged_deploy_1

  test-backend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [backend-build]
        # Your job code here
        - run:
            name: test backend
            command: |
              cd backend
              npm i
              npm run test
        - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
        - slack/notify:
            event: pass
            template: success_tagged_deploy_1


  scan-frontend:
      docker:
        # Docker image here
        - image: circleci/node:13.8.0
      steps:
        # Checkout code from git
        - checkout
        # Restore from cache
        - restore_cache:
            keys: [frontend-build]
        # Your job code here
        - run:
            name: scanning frontend
            command: |
              cd frontend
              npm i
              npm audit fix --audit-level=critical --force
              # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
              #npm audit --audit-level=critical
        - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
        - slack/notify:
            event: pass
            template: success_tagged_deploy_1

#Adding a space
  scan-backend:
    docker:
      # Docker image here
      - image: circleci/node:13.8.0
    steps:
      # Checkout code from git
      - checkout 
      # Restore from cache
      - restore_cache:
          keys: [backend-build]
      # Your job code here
      - run:
          name: scanning backend
          command: |
            cd backend
            npm i
            npm audit fix --audit-level=critical --force
            # If the "npm audit fix" command above could not fix all critical vulnerabilities, try “npm audit fix --force” again
            #npm audit --audit-level=critical
      - slack/notify:
          event: fail
          mentions: '@EngineeringTeam'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

workflows:
  test-and-deploy:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend]
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]
      - slack/on-hold:
          context: slack-context
          filters:
            tags:
              only: /^v.*/
          requires:
            - build-frontend
            - build-backend
            - test-frontend
            - test-backend
            - scan-backend

      - pause_workflow:
          filters:
            tags:
              only: /^v.*/
          requires:
            - test
            - slack/on-hold
          type: approval
      - deploy:
          filters:
            tags:
              only: /^v.*/
          requires:
            - pause_workflow